package day14

func hasTree(blacks []Point2) bool {
	// https://github.com/shahata/adventofcode-solver/blob/master/src/2024/day14.js
	TREE := []string{ // # is black
		"###############################",
		"#.............................#",
		"#.............................#",
		"#.............................#",
		"#.............................#",
		"#..............#..............#",
		"#.............###.............#",
		"#............#####............#",
		"#...........#######...........#",
		"#..........#########..........#",
		"#............#####............#",
		"#...........#######...........#",
		"#..........#########..........#",
		"#.........###########.........#",
		"#........#############........#",
		"#..........#########..........#",
		"#.........###########.........#",
		"#........#############........#",
		"#.......###############.......#",
		"#......#################......#",
		"#........#############........#",
		"#.......###############.......#",
		"#......#################......#",
		"#.....###################.....#",
		"#....#####################....#",
		"#.............###.............#",
		"#.............###.............#",
		"#.............###.............#",
		"#.............................#",
		"#.............................#",
		"#.............................#",
		"#.............................#",
		"###############################",
	}

	treeHeight := len(TREE)
	treeWidth := len(TREE[0])

	hashtagSet := make(map[Point2]bool)
	for _, p := range blacks {
		hashtagSet[p] = true
	}

	for startX := 0; startX <= WIDTH-treeWidth; startX++ {
		for startY := 0; startY <= HEIGHT-treeHeight; startY++ {
			match := true

			for i := 0; i < treeHeight; i++ {
				for j := 0; j < treeWidth; j++ {
					if TREE[i][j] == '#' {

						point := Point2{X: startX + j, Y: startY + i}
						if _, exists := hashtagSet[point]; !exists {
							match = false
							break
						}
					}
				}
				if !match {
					break
				}
			}

			if match {
				return true
			}
		}
	}

	return false
}
